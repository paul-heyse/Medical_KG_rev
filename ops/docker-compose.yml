version: '3.9'

services:
  gateway:
    build:
      context: ..
      dockerfile: Dockerfile
    image: medical-kg/gateway:dev
    environment:
      MK_ENV: dev
      MK_TELEMETRY__EXPORTER: jaeger
      MK_TELEMETRY__ENDPOINT: http://jaeger:4318
      MK_OBSERVABILITY__LOGGING__LEVEL: INFO
      MK_OBSERVABILITY__SENTRY__DSN: ''
      MK_OBSERVABILITY__METRICS__PATH: /metrics
      MK_OBSERVABILITY__LOGGING__CORRELATION_ID_HEADER: X-Correlation-ID
      MK_SECURITY__OAUTH__ISSUER: https://idp.local/realms/medical
      MK_SECURITY__OAUTH__AUDIENCE: medical-kg
      MK_SECURITY__OAUTH__TOKEN_URL: https://idp.local/realms/medical/protocol/openid-connect/token
      MK_SECURITY__OAUTH__JWKS_URL: https://idp.local/realms/medical/protocol/openid-connect/certs
      MK_SECURITY__OAUTH__CLIENT_ID: medical-gateway
      MK_SECURITY__OAUTH__CLIENT_SECRET: dev-secret
    ports:
      - '8000:8000'
    depends_on:
      kafka:
        condition: service_started
      neo4j:
        condition: service_healthy
      opensearch:
        condition: service_healthy
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/metrics']
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ['CMD', 'kafka-topics', '--bootstrap-server', 'localhost:9092', '--list']
      interval: 15s
      timeout: 10s
      retries: 10

  neo4j:
    image: neo4j:5.12
    environment:
      NEO4J_AUTH: neo4j/testpassword
      NEO4JLABS_PLUGINS: '["apoc"]'
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ['CMD-SHELL', 'neo4j status | grep "Running"']
      interval: 15s
      timeout: 10s
      retries: 5

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    environment:
      discovery.type: single-node
      plugins.security.disabled: 'true'
      OPENSEARCH_JAVA_OPTS: '-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
      - '9600:9600'
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    healthcheck:
      test: ['CMD-SHELL', 'curl -sSf http://localhost:9200 >/dev/null']
      interval: 15s
      timeout: 10s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - '16686:16686'
      - '4317:4317'
      - '4318:4318'

  prometheus:
    image: prom/prometheus:v2.49.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml:ro
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:10.4.3
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
      - ./monitoring/grafana/dashboards/:/var/lib/grafana/dashboards/
    ports:
      - '3000:3000'

  loki:
    image: grafana/loki:2.9.7
    command: ['-config.file=/etc/loki/local-config.yaml']
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
    ports:
      - '3100:3100'

  promtail:
    image: grafana/promtail:2.9.7
    command: ['-config.file=/etc/promtail/config.yml']
    volumes:
      - /var/log:/var/log:ro
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
    depends_on:
      - loki

volumes:
  neo4j-data:
  opensearch-data:
