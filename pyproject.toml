[project]
name = "Medical_KG_rev"
version = "0.1.0"
description = "Multi-protocol API gateway and orchestration system for biomedical knowledge integration"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Medical_KG_rev Contributors"}
]
keywords = [
    "biomedical",
    "knowledge-graph",
    "api-gateway",
    "clinical-trials",
    "medical-literature",
    "fhir",
    "openapi",
    "graphql",
    "grpc"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
]

# Core dependencies - essential for basic functionality
dependencies = [
    # API Framework
    "fastapi>=0.118.0",
    "starlette>=0.48.0",
    "uvicorn[standard]>=0.37.0",
    "python-multipart>=0.0.20",

    # Data Validation & Models
    "pydantic>=2.7",
    "pydantic-settings>=2.11.0",
    "attrs>=25.4.0",
    "jsonschema>=4.25.1",
    "alembic>=1.16.5",
    "tomli>=2.3.0",

    # GraphQL
    "strawberry-graphql[fastapi]>=0.283.0",
    "graphql-core>=3.2.6",

    # gRPC & Protocol Buffers
    "grpcio>=1.49.1,<2.0.0",
    "grpcio-tools>=1.49.1,<2.0.0",
    "grpcio-health-checking>=1.49.1,<2.0.0",
    "grpcio-status>=1.49.1,<2.0.0",
    "protobuf>=6.32.1",
    "proto-plus>=1.26.1",
    "googleapis-common-protos>=1.70.0",

    # HTTP Client & Async
    "httpx>=0.28.1",
    "httpcore>=1.0.9",
    "aiohttp>=3.13.0",
    "frozenlist>=1.8.0",
    "propcache>=0.4.0",
    "multidict>=6.7.0",
    "certifi>=2025.10.5",
    "charset-normalizer>=3.4.3",
    "idna>=3.10",
    "httptools>=0.7.1",
    "tenacity>=9.1.2",
    "pluggy>=1.6.0",
    "pybreaker>=1.4.1",
    "aiohappyeyeballs>=2.6.1",
    "aiolimiter>=1.2.1",
    "cloudevents>=1.12.0",
    "humanfriendly>=10.0",
    "coloredlogs>=14.0",
    "dagster>=1.11.14",
    "dagster-pipes>=1.11.14",
    "dagster-postgres>=0.27.14",
    "dagster-shared>=1.11.14",
    "openlineage-python>=1.39.0",
    "typing-extensions>=4.15.0",

    # Message Broker
    "aiokafka>=0.12.0",
    "kafka-python>=2.2.15",
    "watchdog>=6.0.0",

    # Database Drivers
    "neo4j>=6.0.2",
    "opensearch-py>=3.0.0",
    "redis>=6.4.0",
    "hiredis>=3.2.1",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.11",
    "sqlalchemy[asyncio]>=2.0.44",
    "greenlet>=3.2.4",

    # Object Storage
    "boto3>=1.40.49",
    "botocore>=1.40.49",
    "jmespath>=1.0.1",
    "s3transfer>=0.14.0",
    "minio>=7.2.18",
    "urllib3>=2.5.0",

    # Vector Search & Retrieval
    "faiss-cpu>=1.12.0",
    "qdrant-client>=1.15.1",
    "rank-bm25>=0.2.2",

    # ML / AI Libraries (Core)
    "torch>=2.8.0",
    "transformers>=4.57.0",
    "sentence-transformers>=5.1.1",
    "accelerate>=1.10.1",
    "safetensors>=0.6.2",
    "tokenizers>=0.22.1",
    "regex>=2025.9.18",
    "sentencepiece>=0.2.1",
    "tiktoken>=0.12.0",
    "onnxruntime>=1.23.1",
    "onnx>=1.19.1",

    # Document Processing (Core)
    "unstructured>=0.18.15",
    "unstructured-inference>=1.0.5",
    "unstructured-client>=0.42.3",
    "nltk>=3.9.2",
    "syntok>=1.4.4",
    "langdetect>=1.0.9",
    "rapidfuzz>=3.14.1",
    "python-magic>=0.4.27",
    "filetype>=1.2.0",
    "magika>=0.6.2",
    "pillow>=11.3.0",
    "docling[vlm]>=2.0.0",
    "lxml>=6.0.2",
    "beautifulsoup4>=4.14.2",
    "soupsieve>=2.8",
    "html5lib>=1.1",
    "webencodings>=0.5.1",
    "defusedxml>=0.7.1",
    "sgmllib3k>=1.0.0",
    "feedparser>=6.0.12",
    "markdownify>=1.2.0",
    "html2text>=2025.4.15",
    "striprtf>=0.0.29",
    "boilerpy3>=1.0.7",
    "python-oxmsg>=0.0.2",
    "emoji>=2.15.0",
    "python-iso639>=2025.2.18",

    # Biomedical API Clients
    "pyalex>=0.18",
    "biopython>=1.85",

    # Data Processing
    "pandas>=2.3.3",
    "numpy>=2.2.6",
    "scipy>=1.16.2",
    "joblib>=1.5.2",
    "threadpoolctl>=3.6.0",
    "mpmath>=1.3.0",
    "pyyaml>=6.0.3",

    # Authentication & Security
    "python-jose>=3.5.0",
    "hvac>=2.3.0",
    "passlib>=1.7.4",
    "bcrypt>=5.0.0",
    "cryptography>=46.0.2",
    "rsa>=4.9.1",
    "python-dotenv>=1.1.1",
    "argon2-cffi>=25.1.0",
    "argon2-cffi-bindings>=25.1.0",
    "ecdsa>=0.19.1",
    "pyasn1>=0.6.1",
    "pyasn1-modules>=0.4.2",

    # Observability
    "opentelemetry-api>=1.37.0",
    "opentelemetry-sdk>=1.37.0",
    "opentelemetry-instrumentation>=0.58b0",
    "opentelemetry-instrumentation-asgi>=0.58b0",
    "opentelemetry-instrumentation-fastapi>=0.58b0",
    "opentelemetry-instrumentation-grpc>=0.58b0",
    "opentelemetry-instrumentation-httpx>=0.58b0",
    "opentelemetry-util-http>=0.58b0",
    "opentelemetry-semantic-conventions>=0.58b0",
    "prometheus-client>=0.23.1",
    "psutil>=7.1.0",
    "thrift>=0.22.0",

    # Logging
    "structlog>=25.4.0",
    "sentry-sdk>=2.41.0",
    "loguru>=0.7.3",

    # Utilities
    "click>=8.3.0",
    "tqdm>=4.67.1",
    "python-dateutil>=2.9.0.post0",
    "requests>=2.32.5",
    "packaging>=25.0",
    "distro>=1.9.0",
    "jiter>=0.11.0",
    "wrapt>=1.17.3",
    "aiofiles>=25.1.0",
    "aiosignal>=1.4.0",
    "aiosqlite>=0.21.0",
    "appdirs>=1.4.4",
    "arrow>=1.3.0",
    "asgiref>=3.10.0",
    "asttokens>=3.0.0",
    "async-lru>=2.0.5",
    "async-timeout>=5.0.1",
    "babel>=2.17.0",
    "backoff>=2.2.1",
    "backrefs>=5.9",
    "banks>=2.2.0",
    "bitarray>=3.7.2",
    "bleach>=6.2.0",
    "blinker>=1.9.0",
    "blis>=1.3.0",
    "botocore-stubs>=1.40.33",
    "build>=1.3.0",
    "catalogue>=2.0.10",
    "cattrs>=25.3.0",
    "cffi>=2.0.0",
    "cfgv>=3.4.0",
    "cloudpathlib>=0.23.0",
    "colorama>=0.4.6",
    "colorlog>=6.9.0",
    "comm>=0.2.3",
    "confection>=0.1.5",
    "conllu>=6.0.0",
    "coverage>=7.10.7",
    "cymem>=2.0.11",
    "cython>=3.1.4",
    "dataclasses-json>=0.6.7",
    "datasets>=4.2.0",
    "debugpy>=1.8.17",
    "decorator>=5.2.1",
    "dill>=0.4.0",
    "dirtyjson>=1.0.8",
    "distlib>=0.4.0",
    "docopt>=0.6.2",
    "docstring-parser>=0.17.0",
    "duckdb>=1.4.1",
    "et-xmlfile>=2.0.0",
    "events>=0.5",
    "exceptiongroup>=1.3.0",
    "executing>=2.2.1",
    "faker>=37.11.0",
    "fast-pytorch-kmeans>=0.2.2",
    "fastjsonschema>=2.21.2",
    "fasttext-predict>=0.9.2.4",
    "filelock>=3.20.0",
    "flask>=3.1.2",
    "flatbuffers>=25.9.23",
    "flexcache>=0.3",
    "flexparser>=0.4",
    "fqdn>=1.5.1",
    "frozendict>=2.4.6",
    "fsspec[http]>=2025.9.0",
    "geopandas>=1.1.1",
    "ghp-import>=2.1.0",
    "gitdb>=4.0.12",
    "gitpython>=3.1.45",
    "griffe>=1.14.0",
    "grpc-stubs>=1.53.0.6",
    "h11>=0.16.0",
    "h2>=4.3.0",
    "harfile>=0.4.0",
    "hdbscan>=0.8.40",
    "hpack>=4.1.0",
    "html5rdf>=1.2.1",
    "httpx-sse>=0.4.2",
    "hyperframe>=6.1.0",
    "hypothesis>=6.140.3",
    "hypothesis-graphql>=0.11.1",
    "hypothesis-jsonschema>=0.23.1",
    "identify>=2.6.15",
    "imageio>=2.37.0",
    "importlib-metadata>=8.7.0",
    "inflect>=7.5.0",
    "iniconfig>=2.1.0",
    "interegular>=0.3.3",
    "isodate>=0.7.2",
    "isoduration>=20.11.0",
    "itsdangerous>=2.2.0",
    "jedi>=0.19.2",
    "jieba3k>=0.35.1",
    "jinja2>=3.1.6",
    "json-repair>=0.52.0",
    "json5>=0.12.1",
    "jsonschema-specifications>=2025.9.1",
    "junit-xml>=1.9",
    "langcodes>=3.5.0",
    "language-data>=1.3.0",
    "lark>=1.3.0",
    "lazy-loader>=0.4",
    "lia-web>=0.2.3",
    "llama-index-core>=0.14.4",
    "llama-index-instrumentation>=0.4.1",
    "llama-index-workflows>=2.7.1",
    "langchain>=0.3.27",
    "langchain-core>=0.3.79",
    "langchain-text-splitters>=0.3.11",
    "langsmith>=0.4.34",
    "mako>=1.3.10",
    "marisa-trie>=1.3.1",
    "markdown>=3.9",
    "markdown-it-py>=4.0.0",
    "markupsafe>=3.0.3",
    "marshmallow>=3.26.1",
    "mcp>=1.17.0",
    "mdurl>=0.1.2",
    "mergedeep>=1.3.4",
    "mistune>=3.1.4",
    "ml-dtypes>=0.5.3",
    "modelscope>=1.30.0",
    "more-itertools>=10.8.0",
    "mpire[dill]>=2.10.2",
    "multiprocess>=0.70.16",
    "murmurhash>=1.0.13",
    "mypy>=1.18.2",
    "mypy-extensions>=1.1.0",
    "narwhals>=2.7.0",
    "nbclient>=0.10.2",
    "nbconvert>=7.16.6",
    "nbformat>=5.10.4",
    "networkx>=3.5",
    "ninja>=1.13.0",
    "nmslib-metabrainz>=2.1.3",
    "nodeenv>=1.9.1",
    "num2words>=0.5.14",
    "numpy-financial>=1.0.0",
    "omegaconf>=2.3.0",
    "owlrl>=7.1.4",
    "paginate>=0.5.7",
    "pandera>=0.26.1",
    "pandocfilters>=1.5.1",
    "parso>=0.8.5",
    "pathlib-abc>=0.5.1",
    "pathspec>=0.12.1",
    "pdfminer-six>=20250506",
    "pdftext>=0.6.3",
    "pexpect>=4.9.0",
    "pickleshare>=0.7.5",
    "pikepdf>=9.11.0",
    "pint>=0.25",
    "pip-tools>=7.5.1",
    "platformdirs>=4.5.0",
    "playwright>=1.55.0",
    "polyfactory>=2.22.2",
    "portalocker>=3.2.0",
    "pre-commit>=4.3.0",
    "preshed>=3.0.10",
    "prettytable>=3.16.0",
    "prompt-toolkit>=3.0.52",
    "prompthub-py>=4.0.0",
    "propcache>=0.4.1",
    "ptyprocess>=0.7.0",
    "pure-eval>=0.2.3",
    "pyarrow>=21.0.0",
    "pybind11>=3.0.1",
    "pycparser>=2.23",
    "pycryptodome>=3.23.0",
    "pydantic-core>=2.41.1",
    "pygments>=2.19.2",
    "pyjnius>=1.7.0",
    "pylatexenc>=2.10",
    "pymdown-extensions>=10.16.1",
    "pyogrio>=0.11.1",
    "pyparsing>=3.2.5",
    "pyproj>=3.7.2",
    "pyproject-hooks>=1.2.0",
    "pyrate-limiter>=3.9.0",
    "pysbd>=0.3.4",
    "pyserini>=1.2.0",
    "pyshacl>=0.30.1",
    "pysocks>=1.7.1",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "pytest-subtests>=0.14.2",
    "pytest-timeout>=2.4.0",
    "python-bidi>=0.6.6",
    "python-json-logger>=4.0.0",
    "python-multipart>=0.0.20",
    "python-pptx>=1.0.2",
    "pytz>=2025.2",
    "pyyaml-env-tag>=1.1",
    "pyzmq>=27.1.0",
    "quantulum3>=0.9.2",
    "qwen-vl-utils>=0.0.14",
    "rapid-table>=3.0.1",
    "referencing>=0.36.2",
    "reportlab>=4.4.4",
    "requests-cache>=1.2.1",
    "requests-file>=2.1.0",
    "requests-toolbelt>=1.0.0",
    "respx>=0.22.0",
    "retrying>=1.4.2",
    "rfc3339-validator>=0.1.4",
    "rfc3986-validator>=0.1.1",
    "rfc3987>=1.3.8",
    "rfc3987-syntax>=1.1.0",
    "rich>=14.2.0",
    "rich-toolkit>=0.15.1",
    "rignore>=0.7.0",
    "robust-downloader>=0.0.2",
    "rpds-py>=0.27.1",
    "ruff>=0.14.0",
    "schemathesis>=4.2.1",
    "scikit-image>=0.25.2",
    "scikit-learn>=1.7.2",
    "selenium>=4.36.0",
    "semchunk>=2.2.2",
    "send2trash>=1.8.3",
    "shapely>=2.1.2",
    "shellingham>=1.5.4",
    "six>=1.17.0",
    "smart-open>=7.3.1",
    "smmap>=5.0.2",
    "sniffio>=1.3.1",
    "snowballstemmer>=3.0.1",
    "sortedcontainers>=2.4.0",
    "spacy>=3.8.7",
    "spacy-legacy>=3.0.12",
    "spacy-loggers>=1.0.5",
    "spider-client>=0.1.77",
    "srsly>=2.5.1",
    "sse-starlette>=3.0.2",
    "sseclient-py>=1.8.0",
    "stack-data>=0.6.3",
    "starlette-testclient>=0.4.1",
    "sympy>=1.14.0",
    "tabulate>=0.9.0",
    "tenacity>=9.1.2",
    "terminado>=0.18.1",
    "thinc>=8.3.6",
    "thop>=0.1.1.post2209072238",
    "threadpoolctl>=3.6.0",
    "tifffile>=2025.10.4",
    "tinycss2>=1.4.0",
    "tldextract>=5.3.0",
    "tomlkit>=0.13.3",
    "toposort>=1.10",
    "torchvision>=0.23.0",
    "tornado>=6.5.2",
    "traitlets>=5.14.3",
    "triton>=3.4.0",
    "trio>=0.31.0",
    "trio-websocket>=0.12.2",
    "typeguard>=4.4.4",
    "typer>=0.19.2",
    "types-awscrt>=0.27.6",
    "types-boto3>=1.40.49",
    "types-cffi>=1.17.0.20250915",
    "types-jsonschema>=4.25.1.20251009",
    "types-pyasn1>=0.6.0.20250914",
    "types-pyopenssl>=24.1.0.20240722",
    "types-python-dateutil>=2.9.0.20251008",
    "types-python-jose>=3.5.0.20250531",
    "types-pyyaml>=6.0.12.20250915",
    "types-redis>=4.6.0.20241004",
    "types-s3transfer>=0.13.1",
    "types-setuptools>=80.9.0.20250822",
    "typing-inspect>=0.9.0",
    "typing-inspection>=0.4.2",
    "tzdata>=2025.2",
    "ujson>=5.11.0",
    "ukkonen>=1.0.1",
    "ultralytics>=8.3.209",
    "ultralytics-thop>=2.0.17",
    "universal-pathlib>=0.3.3",
    "uri-template>=1.3.0",
    "url-normalize>=2.2.1",
    "uvloop>=0.21.0",
    "virtualenv>=20.35.2",
    "voyager>=2.1.0",
    "wasabi>=1.1.3",
    "watchfiles>=1.1.0",
    "wcwidth>=0.2.14",
    "weasel>=0.4.1",
    "webcolors>=24.11.1",
    "websocket-client>=1.9.0",
    "websockets>=15.0.1",
    "werkzeug>=3.1.3",
    "wheel>=0.45.1",
    "widgetsnbextension>=4.0.14",
    "wsproto>=1.2.0",
    "xgboost>=3.0.5",
    "xlrd>=2.0.2",
    "xlsxwriter>=3.2.9",
    "xxhash>=3.6.0",
    "yarl>=1.22.0",
    "zeep>=4.3.2",
    "zipp>=3.23.0",
    "zstandard>=0.25.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "black>=25.9.0",
    "ruff>=0.14.0",
    "mypy>=1.18.2",
    "pydocstyle>=6.3.0",
    "pre-commit>=4.3.0",
    "coverage>=7.10.7",
    "hypothesis>=6.140.3",
    "schemathesis>=4.2.1",
    "respx>=0.22.0",
    "starlette-testclient>=0.4.1",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "pytest-subtests>=0.14.2",
    "pytest-timeout>=2.4.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocstrings>=0.30.1",
    "mkdocstrings-python>=1.18.2",
    "mkdocs-autorefs>=1.4.3",
    "mkdocs-get-deps>=0.2.0",
    "markdown>=3.9",
    "markdown-it-py>=4.0.0",
    "pymdown-extensions>=10.16.1",
    "backrefs>=5.9",
    "ghp-import>=2.1.0",
    "mergedeep>=1.3.4",
    "pyyaml-env-tag>=1.1",
]

# Jupyter ecosystem (optional)
jupyter = [
    "jupyter>=1.1.1",
    "jupyterlab>=4.4.9",
    "notebook>=7.4.7",
    "ipython>=9.6.0",
    "ipykernel>=6.30.1",
    "ipywidgets>=8.1.7",
    "jupyter-client>=8.6.3",
    "jupyter-server>=2.17.0",
    "jupyterlab-server>=2.27.3",
    "jupyterlab-widgets>=3.0.15",
    "jupyter-server-terminals>=0.5.3",
    "jupyter-console>=6.6.3",
    "jupyter-core>=5.8.1",
    "jupyter-events>=0.12.0",
    "jupyter-lsp>=2.3.0",
    "nbconvert>=7.16.6",
    "nbformat>=5.10.4",
    "nbclient>=0.10.2",
    "notebook-shim>=0.2.4",
    "terminado>=0.18.1",
    "pyzmq>=27.1.0",
    "tornado>=6.5.2",
    "traitlets>=5.14.3",
    "prompt-toolkit>=3.0.52",
    "parso>=0.8.5",
    "jedi>=0.19.2",
    "pexpect>=4.9.0",
    "ptyprocess>=0.7.0",
    "decorator>=5.2.1",
    "pickleshare>=0.7.5",
    "pure-eval>=0.2.3",
    "stack-data>=0.6.3",
    "executing>=2.2.1",
    "asttokens>=3.0.0",
    "wcwidth>=0.2.14",
    "ipython-pygments-lexers>=1.1.1",
]

# Visualization dependencies (optional)
viz = [
    "matplotlib>=3.10.7",
    "matplotlib-inline>=0.1.7",
    "plotly>=6.3.1",
    "dash>=3.2.0",
    "dash-bootstrap-components>=2.0.4",
    "contourpy>=1.3.3",
    "cycler>=0.12.1",
    "fonttools>=4.60.1",
    "kiwisolver>=1.4.9",
    "pyparsing>=3.2.5",
]

# GPU-specific dependencies (optional)
gpu = [
    "cupy-cuda12x>=13.6.0",
    "fastrlock>=0.8.3",
    "nvidia-cublas-cu12>=12.8.4.1",
    "nvidia-cuda-cupti-cu12>=12.8.90",
    "nvidia-cuda-nvrtc-cu12>=12.8.93",
    "nvidia-cuda-runtime-cu12>=12.8.90",
    "nvidia-cudnn-cu12>=9.10.2.21",
    "nvidia-cufft-cu12>=11.3.3.83",
    "nvidia-cufile-cu12>=1.13.1.3",
    "nvidia-curand-cu12>=10.3.9.90",
    "nvidia-cusolver-cu12>=11.7.3.90",
    "nvidia-cusparse-cu12>=12.5.8.93",
    "nvidia-cusparselt-cu12>=0.7.1",
    "nvidia-nccl-cu12>=2.27.3",
    "nvidia-nvjitlink-cu12>=12.8.93",
    "nvidia-nvtx-cu12>=12.8.90",
]

# Specialized ML frameworks (optional)
ml-extended = [
    "colbert-ai>=0.2.22",
    "llama-index-core>=0.14.4",
    "llama-index-instrumentation>=0.4.1",
    "llama-index-workflows>=2.7.1",
    "langchain>=0.3.27",
    "langchain-core>=0.3.79",
    "langchain-text-splitters>=0.3.11",
    "langsmith>=0.4.34",
    "prompthub-py>=4.0.0",
    "qwen-vl-utils>=0.0.14",
    "rapid-table>=3.0.1",
    "semchunk>=2.2.2",
    "mpire[dill]>=2.10.2",
    "multiprocess>=0.70.16",
    "dill>=0.4.0",
    "pyarrow>=21.0.0",
    "fsspec[http]>=2025.9.0",
    "smart-open>=7.3.1",
]

# Specialized document processing (optional)
doc-processing = [
    "pdfplumber>=0.11.7",
    "pypdfium2>=4.30.0",
    "pdfminer-six>=20250506",
    "pdf2image>=1.17.0",
    "pi-heif>=1.1.1",
    "pikepdf>=9.11.0",
    "msoffcrypto-tool>=5.4.2",
    "olefile>=0.47",
    "openpyxl>=3.1.5",
    "python-docx>=1.2.0",
    "python-pptx>=1.0.2",
    "xlrd>=2.0.2",
    "xlsxwriter>=3.2.9",
    "reportlab>=4.4.4",
    "pypandoc>=1.15",
    "easyocr>=1.7.2",
    "pyclipper>=1.3.0.post6",
    "shapely>=2.1.2",
    "scikit-image>=0.25.2",
    "lazy-loader>=0.4",
    "tifffile>=2025.10.4",
    "albucore>=0.0.24",
    "albumentations>=2.0.8",
    "opencv-python>=4.12.0.88",
    "opencv-python-headless>=4.12.0.88",
    "ultralytics>=8.3.209",
    "ultralytics-thop>=2.0.17",
    "thop>=0.1.1.post2209072238",
    "timm>=1.0.20",
    "effdet>=0.4.1",
    "pycocotools>=2.0.10",
    "docling-core>=2.48.4",
    "docling-parse>=4.5.0",
    "unstructured-pytesseract>=0.3.15",
    "voyager>=2.1.0",
    "modelscope>=1.30.0",
    "hf-xet>=1.1.10",
]

# Browser automation (optional)
browser = [
    "selenium>=4.36.0",
    "playwright>=1.55.0",
    "chromedriver-autoinstaller>=0.6.4",
]

# Specialized data processing (optional)
data-extended = [
    "polars>=1.34.0",
    "polars-runtime-32>=1.34.0",
    "narwhals>=2.7.0",
    "duckdb>=1.4.1",
    "geopandas>=1.1.1",
    "pyogrio>=0.11.1",
    "pyproj>=3.7.2",
    "shapely>=2.1.2",
    "frozendict>=2.4.6",
    "quantulum3>=0.9.2",
    "jieba3k>=0.35.1",
    "pysbd>=0.3.4",
    "syntok>=1.4.4",
    "langdetect>=1.0.9",
    "ftfy>=6.3.1",
    "webcolors>=24.11.1",
    "tldextract>=5.3.0",
    "url-normalize>=2.2.1",
    "requests-cache>=1.2.1",
    "requests-file>=2.1.0",
    "requests-toolbelt>=1.0.0",
    "robust-downloader>=0.0.2",
    "sseclient-py>=1.8.0",
    "firecrawl-py>=4.3.7",
    "oxylabs>=2.0.0",
    "spider-client>=0.1.77",
    "pyalex>=0.18",
    "pycountry>=24.6.1",
    "pybreaker>=1.4.1",
    "hvac>=2.3.0",
    "minio>=7.2.18",
    "redis>=6.4.0",
    "neo4j>=6.0.2",
    "qdrant-client>=1.15.1",
    "opensearch-py>=3.0.0",
    "faiss-cpu>=1.12.0",
    "rank-bm25>=0.2.2",
    "hdbscan>=0.8.40",
    "scikit-learn>=1.7.2",
    "xgboost>=3.0.5",
    "numpy-financial>=1.0.0",
    "nmslib-metabrainz>=2.1.3",
    "fast-pytorch-kmeans>=0.2.2",
    "sentence-transformers>=5.1.1",
    "pyserini>=1.2.0",
    "huggingface-hub>=0.35.3",
    "datasets>=4.2.0",
    "pyarrow>=21.0.0",
    "fsspec[http]>=2025.9.0",
    "smart-open>=7.3.1",
]

# Specialized protocols and services (optional)
protocols = [
    "grpcio>=1.75.1",
    "grpcio-status>=1.75.1",
    "grpcio-tools>=1.75.1",
    "grpcio-health-checking>=1.75.1",
    "grpc-stubs>=1.53.0.6",
    "protobuf>=6.32.1",
    "proto-plus>=1.26.1",
    "googleapis-common-protos>=1.70.0",
    "google-api-core[grpc]>=2.26.0",
    "google-auth>=2.41.1",
    "google-cloud-vision>=3.10.2",
    "cachetools>=6.2.0",
    "pyasn1>=0.6.1",
    "pyasn1-modules>=0.4.2",
    "zeep>=4.3.2",
    "mcp>=1.17.0",
    "strawberry-graphql>=0.283.2",
    "graphql-core>=3.2.6",
    "lia-web>=0.2.3",
    "sse-starlette>=3.0.2",
    "websockets>=15.0.1",
    "websocket-client>=1.9.0",
]

# All optional dependencies
all = [
    "Medical_KG_rev[dev,docs,jupyter,viz,gpu,ml-extended,doc-processing,browser,data-extended,protocols]"
]

[project.entry-points."medical_kg.adapters"]
example = "Medical_KG_rev.adapters.plugins.example:ExampleAdapterPlugin"

[project.urls]
Homepage = "https://github.com/your-org/Medical_KG_rev"
Documentation = "https://your-org.github.io/Medical_KG_rev"
Repository = "https://github.com/your-org/Medical_KG_rev"
Issues = "https://github.com/your-org/Medical_KG_rev/issues"

[project.scripts]
medkg = "Medical_KG_rev.cli:main"
medkg-gateway = "Medical_KG_rev.gateway.main:main"

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"Medical_KG_rev.kg" = ["*.ttl"]
"Medical_KG_rev.services.evaluation.data" = ["test_sets/*.yaml"]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"
extend-select = [
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "RUF",  # ruff-specific
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "D",    # pydocstyle
]
ignore = [
    "E501",    # Line too long (handled by black)
    "TID252",  # Allow relative imports within package
    "N999",    # Allow capitalized top-level package name
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
    "D106",    # Missing docstring in public nested class
    "D107",    # Missing docstring in __init__
]

[tool.ruff.isort]
known-first-party = ["Medical_KG_rev"]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
"src/Medical_KG_rev/gateway/coordinators/*.py" = []
"src/Medical_KG_rev/services/**/*.py" = []
"src/Medical_KG_rev/orchestration/**/*.py" = []

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
files = ["src/Medical_KG_rev/observability"]

[[tool.mypy.overrides]]
module = [
    "pyalex.*",
    "neo4j.*",
    "opensearch.*",
    "faiss.*",
    "minio.*",
    "zeep.*",
    "aiokafka.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "Medical_KG_rev.adapters.*",
    "Medical_KG_rev.config.*",
    "Medical_KG_rev.services.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["Medical_KG_rev.auth.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["grpc", "grpc.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=Medical_KG_rev",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
markers = [
    "integration: Integration tests requiring external services",
    "gpu: Tests requiring GPU hardware",
    "slow: Slow-running tests",
    "contract: Contract tests against API specs",
    "performance: Performance and load tests",
]

[tool.coverage.run]
source = ["src/Medical_KG_rev"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pydocstyle]
convention = "google"
add-ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D200",  # One-line docstring should fit on one line with quotes
    "D201",  # No blank lines allowed before function docstring
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "D204",  # 1 blank line required after class docstring
    "D205",  # 1 blank line required between summary line and description
    "D206",  # Docstring should be indented with spaces, not tabs
    "D207",  # Docstring is under-indented
    "D208",  # Docstring is over-indented
    "D209",  # Multi-line docstring closing quotes should be on a separate line
    "D210",  # No whitespaces allowed surrounding docstring text
    "D211",  # No blank lines allowed before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line
    "D214",  # Section is over-indented
    "D215",  # Section underline is over-indented
    "D300",  # Use """triple double quotes"""
    "D301",  # Use r"""raw triple double quotes"""
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D402",  # First line should not be the function's signature
    "D403",  # First word of the first line should be capitalized
    "D404",  # First word of the docstring should not be `This`
    "D405",  # Section name should be capitalized
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D408",  # Section underline should be in the line following the section's name
    "D409",  # Section underline should match the length of its name
    "D410",  # Missing blank line after section
    "D411",  # Missing blank line before section
    "D412",  # No blank lines allowed between a section header and its content
    "D413",  # Missing blank line after last section
    "D414",  # Section has no content
    "D415",  # First line should end with a period, question mark, or exclamation point
    "D416",  # Section name should end with a colon
    "D417",  # Missing argument descriptions in the docstring
    "D418",  # Missing parameter descriptions in the docstring
    "D419",  # Multiple docstring sections are not allowed
]
match = "(?!test_).*\\.py"

[tool.pydocstyle.per-file-ignores]
"tests/*.py" = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
"src/Medical_KG_rev/gateway/coordinators/*.py" = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]
