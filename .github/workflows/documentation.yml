name: Repository Documentation Quality

on:
    pull_request:
        paths:
            - "src/Medical_KG_rev/**"
            - "tests/**"
            - "scripts/**"
            - ".pre-commit-config.yaml"
    push:
        branches: [main]
    schedule:
        - cron: "0 2 * * 1" # Weekly on Monday at 2 AM

jobs:
    check-docs:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.11"]

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install ruff mypy pydocstyle
                  pip install -r requirements.txt

            - name: Check docstrings with ruff
              run: |
                  ruff check --select D src/Medical_KG_rev/ tests/

            - name: Check section headers
              run: |
                  python scripts/check_section_headers.py --verbose

            - name: Check docstring coverage
              run: |
                  python scripts/check_docstring_coverage.py --min-coverage 90 --verbose

            - name: Check for duplicate code
              run: |
                  python scripts/find_duplicate_code.py

            - name: Check type hints
              run: |
                  python scripts/check_type_hints.py src/Medical_KG_rev/

            - name: Check method ordering
              run: |
                  python scripts/check_method_ordering.py --verbose

            - name: Check import organization
              run: |
                  python scripts/organize_imports.py --dry-run

            - name: Run mypy
              run: |
                  mypy --strict src/Medical_KG_rev/

            - name: Run pydocstyle
              run: |
                  pydocstyle src/Medical_KG_rev/ tests/ || true

            - name: Generate documentation quality report
              run: |
                  echo "# Documentation Quality Report" > doc_quality_report.md
                  echo "" >> doc_quality_report.md
                  echo "## Section Headers" >> doc_quality_report.md
                  python scripts/check_section_headers.py >> doc_quality_report.md
                  echo "" >> doc_quality_report.md
                  echo "## Docstring Coverage" >> doc_quality_report.md
                  python scripts/check_docstring_coverage.py --min-coverage 90 >> doc_quality_report.md
                  echo "" >> doc_quality_report.md
                  echo "## Type Hints" >> doc_quality_report.md
                  python scripts/check_type_hints.py src/Medical_KG_rev/ >> doc_quality_report.md

            - name: Upload documentation quality report
              uses: actions/upload-artifact@v4
              with:
                  name: documentation-quality-report
                  path: doc_quality_report.md

    lint-and-format:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install ruff mypy pydocstyle
                  pip install -r requirements.txt

            - name: Run ruff linter
              run: |
                  ruff check src/Medical_KG_rev/ tests/

            - name: Run ruff formatter
              run: |
                  ruff format --check src/Medical_KG_rev/ tests/

            - name: Run mypy
              run: |
                  mypy --strict src/Medical_KG_rev/

    security-check:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install bandit safety
                  pip install -r requirements.txt

            - name: Run bandit security check
              run: |
                  bandit -r src/Medical_KG_rev/ -f json -o bandit-report.json || true

            - name: Run safety check
              run: |
                  safety check --json --output safety-report.json || true

            - name: Upload security reports
              uses: actions/upload-artifact@v4
              with:
                  name: security-reports
                  path: |
                      bandit-report.json
                      safety-report.json

    pre-commit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pre-commit
                  pip install -r requirements.txt

            - name: Run pre-commit
              run: |
                  pre-commit run --all-files

    build-docs:
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
            - uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install mkdocs mkdocstrings[python] mkdocs-material
                  pip install -r requirements.txt

            - name: Build documentation
              run: |
                  mkdocs build --strict

            - name: Deploy documentation
              if: github.ref == 'refs/heads/main'
              run: |
                  echo "Documentation built successfully"
                  # Add deployment steps here if needed
